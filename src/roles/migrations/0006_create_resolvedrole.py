# Generated by Django 4.2 on 2023-04-22 03:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from textwrap import dedent

def normalize(sql: str) -> str:
    uncommented = [line for line in sql.splitlines() if line.strip() and not line.lstrip().startswith('--')]
    return dedent('\n'.join(uncommented))


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('roles', '0005_alter_role_target_alter_role_user'),
    ]

    operations = [
        migrations.RunSQL(
            sql=normalize('''
                CREATE VIEW roles_resolvedrole AS

                -- All targets mastered by all users.
                WITH RECURSIVE mastered_targets (target_id, user_id) AS (

                    -- Select all mastered roletargets by all users
                    SELECT roles_roletarget.id, roles_role.user_id FROM roles_roletarget
                        JOIN roles_role
                            ON roles_role.target_id = roles_roletarget.id
                        WHERE roles_role.type = 'master'

                    UNION ALL

                    -- Union with all children of mastered roletargets
                    SELECT
                        roles_roletarget.id,
                        mastered_targets.user_id
                    FROM roles_roletarget
                        JOIN mastered_targets
                            ON roles_roletarget.parent_id = mastered_targets.target_id
                ),

                -- All roles all users have on all targets.
                resolvedrole (target_id, user_id, type) AS (
                    -- Start with all roles on all role targets
                    SELECT
                        roles_roletarget.id,
                        roles_role.user_id,
                        roles_role.type
                    FROM roles_roletarget
                        JOIN roles_role
                            ON roles_role.target_id = roles_roletarget.id

                    -- Filter master because we'll get it via the union anyway
                    WHERE roles_role.type != 'master'

                    UNION ALL

                    -- Union with the computed masterships
                    SELECT target_id, user_id, 'master' FROM mastered_targets

                    UNION ALL

                    -- Add 'editor' if the inferred types had 'master'
                    SELECT target_id, user_id, 'editor' FROM resolvedrole
                        WHERE resolvedrole.type = 'master'

                    UNION ALL

                    -- Add 'viewer' if the inferred types had 'editor'
                    SELECT target_id, user_id, 'viewer' FROM resolvedrole
                        WHERE resolvedrole.type = 'editor'
                )

                -- Need an arbitrary ID to act as the primary key
                SELECT (target_id || '.' || user_id || '.' || type) as id, target_id, user_id, type FROM resolvedrole
                '''),
            reverse_sql='DROP VIEW roles_resolvedrole',
        ),
    ]
